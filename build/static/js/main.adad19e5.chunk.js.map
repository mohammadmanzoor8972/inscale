{"version":3,"sources":["components/HeaderNav/HeaderStyled.js","components/HeaderNav/HeaderNav.jsx","components/CampignItems/syled.js","components/CampignItems/CampignItems.jsx","components/CampignList/CampignListStyled.js","components/CampignList/CampignList.jsx","components/CampignFilters/CampignFilters.jsx","components/Campign/styled.js","components/Campign/Campign.jsx","serviceWorker.js","index.js","App.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","HeaderNav","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","margin","Active","inActive","label","top","CampignItems","row","isActive","fDate","lDate","cDate","startDate","endDate","Date","parse","format","Now","TableRow","TableCell","align","name","budget","header","table","CampignList","rows","columns","Table","size","TableHead","map","column","index","key","TableBody","CampignFilters","onChange","useState","text","start","end","filter","setFilter","useEffect","utils","DateFnsUtils","Grid","container","item","sm","disableToolbar","id","value","date","KeyboardButtonProps","TextField","event","currentTarget","InputProps","endAdornment","InputAdornment","marginTop","COLUMNS","field","filtering","type","Campign","data","filterData","setFilterData","Paper","filterObj","console","log","dataFilter","includes","Boolean","window","location","hostname","match","ReactDOM","render","setData","AddCampaigns","newData","datas","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.adad19e5.chunk.js","sourcesContent":["import { fade, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: 120,\n        '&:focus': {\n          width: 200,\n        },\n      },\n    },\n  }));\n\n  export default useStyles;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport useStyles from './HeaderStyled';\n\nconst HeaderNav=()=> {\n    const classes = useStyles();\n  \n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              InScale Campign List\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n\n  export default HeaderNav;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        padding:'10px',\n        margin:'50px'\n    },\n  \n    Active: {\n        color:'green'\n    },\n    inActive: {\n        color:'red'\n    },\n\n    label:{\n        position:\"relative\",\n        top:\"-7px\"\n    }\n\n}))\n","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { format } from 'date-fns';\nimport { useStyles } from './syled';\n\nexport const CampignItems=({row})=>{   \n    const classes = useStyles();\n    \n    const isActive=()=>{\n        const {startDate, endDate} = row;\n\n        var fDate,lDate,cDate;\n        fDate = Date.parse(format(startDate, \"DD/MM/YYYY\"));\n        lDate = Date.parse(format(endDate, \"DD/MM/YYYY\"));\n        cDate = Date.parse(format(Date.Now(),\"DD/MM/YYYY\"));\n    \n        if((cDate <= lDate && cDate >= fDate)) {\n            return 'Active';\n        }\n        return 'inActive';\n    }\n\n    return(\n        <TableRow>\n            <TableCell align=\"left\">{row.name}</TableCell>\n            <TableCell align=\"left\">\n                {row.startDate}\n            </TableCell>\n            <TableCell align=\"left\">\n                {row.endDate}\n            </TableCell>\n            <TableCell align=\"left\" >\n                <FiberManualRecordIcon className={classes[isActive()]}/>\n                <span className={classes.label}>{isActive()}</span> \n                </TableCell>\n            <TableCell align=\"left\">{row.budget}</TableCell>\n      </TableRow>\n    )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        padding:'10px',\n        margin:'50px'\n    },\n    header: {\n        backgroundColor:'grey'\n    },\n    table: {\n        width:'100%'\n    }\n}))","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { CampignItems } from '../CampignItems';\nimport { useStyles } from './CampignListStyled';\n\nexport const CampignList = ({ rows = [], columns=[] }) => {\n    const classes = useStyles();\n\n    return (\n       \n        <Table className={classes.table} size=\"small\">\n            <TableHead>\n                <TableRow className={classes.header}>\n                    {columns.map((column,index)=>(\n                        <TableCell key={index}>{column.title}</TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {rows.map((row, index) => (\n                    <CampignItems row={row} key={index} />\n                ))}\n            </TableBody>\n        </Table>\n    );\n}","\nimport React, {useState, useEffect} from 'react';\nimport { TextField, InputAdornment } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format } from 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker\n} from '@material-ui/pickers';\n\nexport const CampignFilters = ({onChange}) => {\n\n    const [filter, setFilter] = useState({\n        text:'',\n        start:null,\n        end:null\n    })\n\n    useEffect(()=>{\n        onChange(filter)\n    },[filter])\n\n    const textChangeHandler=(event)=>{\n        const value = event.currentTarget.value;\n        setFilter({...filter, text:value})\n      }\n    \n        \n      const startDateChangeHandler=(date)=>{\n       const value = date;\n        setFilter({...filter, start:format(value, 'dd/MMM/yyyy')})\n      }\n    \n      const endDateChangeHandler=(date)=>{\n        const value = date;\n        setFilter({...filter, end:format(value, 'dd/MMM/yyyy')})\n      }\n\n    return (\n\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container>\n                <Grid item sm={4}>\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"MM/dd/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Start Date\"\n                        value={filter.start}\n                        onChange={startDateChangeHandler}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </Grid>\n                <Grid item sm={4}>\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"MM/dd/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"End Date\"\n                        value={filter.end}\n                        onChange={endDateChangeHandler}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </Grid>\n                <Grid item sm={4}>\n                    <TextField\n                        id=\"input-with-icon-textfield\"\n                        label=\"Search\"\n                        margin=\"normal\"\n                        onChange={textChangeHandler}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </MuiPickersUtilsProvider>\n\n    )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        padding:'10px',\n        margin:'0px auto',\n        width:\"800px\",\n        marginTop:\"50px\"\n\n    }\n}))\n","import React, {useState, useEffect} from 'react';\nimport { CampignList } from '../CampignList/';\nimport { CampignFilters } from '../CampignFilters/CampignFilters';\nimport { Paper } from '@material-ui/core';\nimport { useStyles } from './styled';\n\nconst COLUMNS = [\n  { title: 'Name', field: 'name', filtering: false },\n  { title: 'Start Date', field: 'startdate', type:'string' },\n  { title: 'End Date', field: 'enddate', type:'string' },\n  { title: 'Active', field: 'active', type: 'boolean',filtering: false },\n  { title: 'Budget', field: 'budget', type: 'currency', filtering: false },\n];\n\nexport const Campign =({data})=> {\n  const classes = useStyles();\n\n  const [filterData, setFilterData] = useState(data);\n\n  const onChangeHandler=(filterObj)=>{\nconsole.log(filterObj)\n    const dataFilter = [...data].filter((item)=>item.name.includes(filterObj.text) || item.startDate.includes(filterObj.start) );\n    setFilterData(dataFilter);\n  }\n\n  useEffect(()=>{\n    setFilterData(data);\n  },[data])\n\n    return(\n      <Paper className={classes.root}>\n        <CampignFilters \n          onChange={onChangeHandler}\n        />\n        <CampignList \n          rows={filterData} \n          columns={COLUMNS}\n          />\n      </Paper>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nimport React, {useState} from 'react';\nimport HeaderNav from './components/HeaderNav/HeaderNav';\nimport {Campign} from './components/Campign/';\n\n\nexport default function App() {\n  const [data, setData] = useState([]);\n\n  window.AddCampaigns = function(newData=[]){\n    const datas = [...data, ...newData];\n    setData(datas);\n  }\n\n  return (\n    <>\n      <HeaderNav/>\n      <Campign data={data}/>\n    </>\n  );\n}"],"sourceRoot":""}